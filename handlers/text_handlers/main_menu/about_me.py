from typing import Coroutine

from aiogram import Dispatcher, types
from config import bot


async def process_about_me(message: types.Message) -> Coroutine:
    await bot.send_message(
        message.from_user.id,
        "<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º</b> –≤–∞—Å –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ IT —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π!"
        "–ú—ã –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤  üíª<b>Geek Shop</b>üíª\n\n"
        "<i>–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ:</i>\n"
        "‚òëÔ∏è–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –±–æ—Ç–∞ –Ω–∞¬†Python\n"
        "‚òëÔ∏è–î–æ—Ä–∞–±–æ—Ç–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞¬†Python, PHP, JS, Swift;\n"
        "‚òëÔ∏è–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä—Å–µ—Ä–æ–≤;\n"
        "‚òëÔ∏è–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –±–∏–∑–Ω–µ—Å–∞;\n"
        "‚òëÔ∏è–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –±–∏–∑–Ω–µ—Å–∞.\n\n"
        "                       <b><i>–í—ã –ø–æ –∞–¥—Ä–µ—Å—É!</i></b>\n\n"
        "<i>–ü–æ—Ç–æ–º—É —á—Ç–æ –º—ã:</i>\n"
        "‚úîÔ∏è–í—ã–≤–µ–¥–µ–º –≤–∞—à –±–∏–∑–Ω–µ—Å –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å;\n"
        "‚úîÔ∏è–ù–∞–π–¥–µ–º —Ä–µ—à–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞;\n"
        "‚úîÔ∏è–ü–æ–º–æ–∂–µ–º —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π –Ω–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º;\n"
        "‚úîÔ∏è–í–æ–∑—å–º–µ–º –Ω–∞ –∞—É—Ç—Å–æ—Ä—Å–∏–Ω–≥;\n"
        "‚úîÔ∏è–û—Å–≤–æ–±–æ–¥–∏–º –≤–∞—à–µ –≤—Ä–µ–º—è –∏ –∏–∑–±–∞–≤–∏–º –æ—Ç —Ä—É—Ç–∏–Ω—ã.\n",
    )
    await message.answer(
        "–ù–∞—à–∏ —Å—Å—ã–ª–∫–∏: \n\n"
        "–¢–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª - <b><i><a href='https://t.me/+anaOpsr-QTA3ZWUy'>—Å—Å—ã–ª–∫–∞</a></i></b>\n"
        "–ö–∞–Ω–∞–ª —Å –æ—Ç–∑—ã–≤–∞–º–∏ - <b><i><a href='https://t.me/+195G2W6NzpZmZGEy'>—Å—Å—ã–ª–∫–∞</a></i></b>\n"
        "–ö–∞–Ω–∞–ª —Å –Ω–∞—à–∏–º–∏ —Ä–∞–±–æ—Ç–∞–º–∏ - <b><i><a href='https://t.me/+9NmdZIoGfZ5mNjQy'>—Å—Å—ã–ª–∫–∞</a></i></b>\n",
        disable_web_page_preview=True,
    )


def register_handlers_about_me(dp: Dispatcher) -> None:
    dp.register_message_handler(
        process_about_me, lambda m: m.text and m.text == "‚ùî –û –Ω–∞—Å"
    )
